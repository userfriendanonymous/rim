[LetIn([LetIn([Module(Value { last: T, others: [U, N, I] }, Where([Product(Value { last: W, others: [N, E] }, [])]))], [Module(Value { last: L, others: [B, O, O] }, Where([LetIn([Sum(Value { last: H, others: [M, A, T, C] }, [Value { last: E, others: [T, R, U] }, Value { last: E, others: [F, A, L, S] }])], [Val(Value { last: H, others: [M, A, T, C] }, Function(Value { input: Value { last: T, others: [] }, output: Function(Value { input: Value { last: F, others: [] }, output: Call(Call(Ref(Value { name: Value { last: H, others: [M, A, T, C] }, items: [] }), Function(Value { input: Value { last: V, others: [] }, output: Ref(Value { name: Value { last: T, others: [] }, items: [] }) })), Function(Value { input: Value { last: V, others: [] }, output: Ref(Value { name: Value { last: F, others: [] }, items: [] }) })) }) })), Val(Value { last: E, others: [T, R, U] }, Call(Ref(Value { name: Value { last: E, others: [T, R, U] }, items: [] }), Ref(Value { name: Value { last: W, others: [N, E] }, items: [Value { last: T, others: [U, N, I] }] }))), Val(Value { last: E, others: [F, A, L, S] }, Call(Ref(Value { name: Value { last: E, others: [F, A, L, S] }, items: [] }), Ref(Value { name: Value { last: W, others: [N, E] }, items: [Value { last: T, others: [U, N, I] }] })))])])), Module(Value { last: T, others: [U, N, I] }, Ref(Value { name: Value { last: T, others: [U, N, I] }, items: [] }))])], [Val(Value { last: N, others: [M, A, I] }, Ref(Value { name: Value { last: W, others: [N, E] }, items: [Value { last: T, others: [U, N, I] }] }))])]